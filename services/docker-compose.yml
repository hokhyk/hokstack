version: '3.7'
services:
  # The nginx Web Server
    nginx:
      container_name: nginx
      build:
        context: ./nginx
        dockerfile: nginx.dockerfile      
      volumes: 
        - ../data/wwwroot:/data/www
        - ../logs:/var/log/nginx
        - ./nginx/conf/vhost:/etc/nginx/conf.d
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      networks:
        - devnet
      ports:
        - 80:80
        - 8080:8080
        - 443:443
      restart: always
      command: nginx -g 'daemon off;'

    # The Application (laravel, django and so on...) 
    php:
      container_name: php
      build:
        context: ./php
        dockerfile: php.dockerfile
      networks:
        devnet:
          aliases:
            - php-fpm            
      ports:
        - 9000:9000
      environment:
        - "DB_PORT=3306"
        - "DB_HOST=database"
      volumes:
        - ../data/wwwroot:/data/www
        - ./php/conf/php.ini:/usr/local/etc/php/php.ini
        - ./php/conf/php-fpm.conf:/usr/local/etc/php-fpm.conf
        - ../logs:/var/log/php-fpm
      restart: always
      command: php-fpm

    # The Database
    mysql:
      container_name: mysql
      build:
        context: ./mysql
        dockerfile: mysql.dockerfile
      command: --default-authentication-plugin=mysql_native_password
      restart: always
      volumes:
        - ../data/mysql:/var/lib/mysql
        - ../logs/:/var/lib/mysql-logs
        - ./mysql/conf:/etc/mysql/conf.d
      environment:
        - "MYSQL_DATABASE=homestead"
        - "MYSQL_USER=homestead"
        - "MYSQL_PASSWORD=secret"
        - "MYSQL_ROOT_PASSWORD=secret"
      ports:
        - 3306:3306
      networks:
          devnet:
            aliases:
              - mysql
    
    phpmyadmin:
      container_name: phpmyadmin
      build:
        context: ./phpmyadmin
        dockerfile: phpmyadmin.dockerfile
      restart: always
      ports:
        - "8081:80"
      environment:
        PMA_HOST: "mysql"
        PMA_USER: "root"
        PMA_PASSWORD: "admin"
      networks:
        devnet:
          aliases:
            - phpmyadmin
  
    angular:
      container_name: angular
      build:
        context: ./angular
        dockerfile: angular.dockerfile
      restart: always
      networks:
        devnet:
          aliases:
            - angular
      ports:
        - 4200:4200
  
    redis:
      container_name: redis-server
      build:
        context: ./redis
        dockerfile: redis.dockerfile
      ports:
        - "6379:6379"
      volumes:
        - ../data/redis:/data
      networks:
        devnet:
          aliases:
            - redis
      restart: always
networks:
  devnet:
# volumes:
#   wwwroot:
#     driver: local
#     driver_opts:
#       type: none
#       device: $PWD/${WWWROOT_PATH}
#       o: bind