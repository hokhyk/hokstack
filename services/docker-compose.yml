version: '3.1'
services:
  # The nginx Web Server
  nginx:
    container_name:nginx
    build:
      context: ./nginx
      dockerfile: nginx.dockerfile
    volumes:
      # mounted for static resources/frontend under frontend/backend separated deployment.
      - /nginx/wwwroot:/var/www
      
    volumes:
      - ../data/wwwroot:/data/www:rw
      - ./nginx/conf/vhost:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../logs/nginx:/var/log/nginx
    networks:
      - app
      - phpmyadmin
    ports:
      - 80:80
      - 8080:8080
      - 443:443
    restart: always
    command: nginx -g 'daemon off;'

  # The Application (laravel, django and so on...) 
  php:
      container_name:php
    build:
      context: ./php
      dockerfile: php.dockerfile
    working_dir: /var/www
    volumes:
      - ./:/var/www
    environment:
      - "DB_PORT=3306"
      - "DB_HOST=database"
    depends_on:
      - database
      - phpmyadmin



  # The Database
  mysql:
      container_name:mysql
    build:
      context: ./mysql
      dockerfile: mysql.dockerfile
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - dbdata:/var/lib/mysql
    environment:
      - "MYSQL_DATABASE=homestead"
      - "MYSQL_USER=homestead"
      - "MYSQL_PASSWORD=secret"
      - "MYSQL_ROOT_PASSWORD=secret"
    ports:
        - "33061:3306"
  
  phpmyadmin:
    build:
      context: ./phpmyadmin
      dockerfile: phpmyadmin.dockerfile
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: "mysql"
      PMA_USER: "root"
      PMA_PASSWORD: "admin"
 
   angular:
      container_name:angular
    build:
      context: ./angular
      dockerfile: angular.dockerfile
    restart: always
 
  redis:
      container_name:redis-server
    build:
      context: ./
      dockerfile: redis.dockerfile
    restart: always
